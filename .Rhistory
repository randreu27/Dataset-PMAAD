# Carregar DF
library(readr)
books <- read.csv("https://raw.githubusercontent.com/randreu27/Dataset-PMAAD/main/llibres_with_setting.csv")
# Interpretació NA
books$isbn[books$isbn == '9999999999999'] <- NA
books$genres[books$genres == '[]'] <- NA
books$characters[books$characters == '[]'] <- NA
# Awards buit hem considerat que és que no té premis, no que no se sàpiguen
books$ratingsByStars[books$ratingsByStars == '[]'] <- NA
books$setting[books$setting == '[]'] <- NA
# Neteja caràcters
books$genres <- gsub("\\[|\\]|'", '', books$genres)
books$characters <- gsub("^\\[('|\")|('|\")\\]$", '', books$characters)
books$awards <- gsub("^\\[(\"|')?|('|\")?\\]$", "", books$awards)
books$ratingsByStars <- gsub("\\[|\\]|'", '', books$ratingsByStars)
books$setting <- gsub("\\[|\\]|'", '', books$setting)
books$price <- gsub('\\.(.*\\.)', '\\1', books$price)
# Separació
books$genres <- strsplit(books$genres, ", ")
books$characters <- strsplit(books$characters, "('|\"), ('|\")")
books$awards <- strsplit(books$awards, "('|\"), ('|\")")
books$ratingsByStars <- strsplit(books$ratingsByStars, ", ")
books$setting <- strsplit(books$setting, ", ")
# Numèric
# i noves variables
books[c('n5stars', 'n4stars', 'n3stars', 'n2stars', 'n1stars')] <-
as.numeric(do.call(rbind, books$ratingsByStars))
# al preprocessing hauriem de comprovar que la suma doni el num de ratings tot
books$price <- as.numeric(books$price)
# Neteja variables
books$X <- NULL
books$ratingsByStars <- NULL
# Bivariate Analysis #
# pages vs ratings
pages <- books$pages
ratings <- books$rating
library(ggplot2)
ggplot(books, aes(x = pages, y = ratings)) +
geom_point() +
labs(x = 'Pàgines', y = 'Valoració', title = 'Pàgines VS Valoracions')
# genres vs setting
genres <- books$genres
setting <- books$setting
library(vcd)
variable1 <- unlist(genres)
variable2 <- unlist(setting)
library(ggplot2)
# genres vs ratings
genres <- books$genres
ratings <- books$rating
ggplot(books, aes(x = genres, y = ratings, fill = genres)) +
geom_bar(stat = "identity") +
labs(x = 'Gèneres', y = 'Valoracions', title = 'Valoracions VS Gèneres')
# Crear los datos
genres <- c(c('A', 'B'), c('C', 'D'))
ratings <- c(5, 4)
# Crear un data frame
data <- data.frame(Genre = unlist(genres), Rating = rep(ratings, sapply(genres, length)))
data <- data.frame(Genre = unlist(genres), Rating = rep(ratings, sapply(genres, length)))
# genres vs ratings
genres <- books$genres
ratings <- books$rating
library(dplyr)
ratings_avg <- ratings %>%
group_by(genres) %>%
summarize(Average_Rating = mean(ratings))
library(dplyr)
ratings_avg <- books %>%
group_by(genres) %>%
summarize(Average_Rating = mean(ratings))
# Crear el gráfico de barras
library(ggplot2)
ggplot(ratings_avg, aes(x = Genre, y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género")
# Crear el gráfico de barras
library(ggplot2)
ggplot(ratings_avg, aes(x = genres, y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género")
# genres vs ratings
genres <- books$genres
ratings <- books$rating
library(dplyr)
ratings_avg <- books %>%
group_by(genres) %>%
summarize(Average_Rating = mean(ratings))
# Crear el gráfico de barras
library(ggplot2)
ggplot(ratings_avg, aes(x = genres, y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género")
# genres vs ratings
genres <- books$genres
ratings <- books$rating
library(dplyr)
ratings_avg <- books %>%
group_by(genres) %>%
summarize(Average_Rating = mean(ratings))
# Crear el gráfico de barras
library(ggplot2)
ggplot(ratings_avg, aes(x = Genre, y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = sprintf("%.2f", Average_Rating)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género")
ggplot(ratings_avg, aes(x = genres, y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = sprintf("%.2f", Average_Rating)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
genres
head(genres)
head(ratings)
# genres vs ratings
genres <- books$genres
ratings <- books$rating
# Convertir los géneros a un solo vector
genres <- unlist(genres)
# Crear un data frame con los géneros y las calificaciones
data <- data.frame(Genre = genres, Rating = rep(ratings, sapply(genres, length)))
# genres vs ratings
genres <- books$genres
ratings <- books$rating
genres <- unlist(genres)
# Calcular las longitudes de cada elemento en la lista de géneros
lengths_genres <- lengths(genres)
# Replicar las calificaciones para que coincidan con las longitudes de los géneros
ratings_rep <- rep(ratings, lengths_genres)
# Crear el data frame
data <- data.frame(Genre = genres, Rating = ratings_rep)
# Verificar las longitudes de ratings y lengths_genres
length(ratings)
length(lengths_genres)
# genres vs ratings
genres <- books$genres
ratings <- books$rating
genres <- unlist(genres)
# Calcular las longitudes de cada elemento en la lista de géneros
lengths_genres <- lengths(genres)
# Calcular la proporción de la longitud total de genres con respecto a la longitud de ratings
proporcion <- sum(lengths_genres) / length(ratings)
# Redondear la proporción a un entero
proporcion_redondeada <- round(proporcion)
# Replicar ratings para que coincida con la longitud de lengths_genres
ratings_rep <- rep(ratings, proporcion_redondeada)
# Ajustar la longitud de ratings_rep para que coincida exactamente con la longitud de lengths_genres
ratings_rep <- ratings_rep[1:sum(lengths_genres)]
# Crear el data frame
data <- data.frame(Genre = genres, Rating = ratings_rep)
# Calcular el promedio de calificaciones por género
library(dplyr)
ratings_avg <- data %>%
group_by(Genre) %>%
summarize(Average_Rating = mean(Rating))
# Ordenar los géneros por calificación promedio
ratings_avg <- ratings_avg[order(ratings_avg$Average_Rating, decreasing = TRUE), ]
# Graficar las calificaciones promedio por género
library(ggplot2)
ggplot(ratings_avg, aes(x = reorder(Genre, Average_Rating), y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje x para mejor visualización
# genres vs ratings
genres <- books$genres
ratings <- books$rating
genres <- unlist(genres)
lengths_genres <- lengths(genres)
proporcion <- sum(lengths_genres) / length(ratings)
proporcion_redondeada <- round(proporcion)
ratings_rep <- rep(ratings, proporcion_redondeada)
ratings_rep <- ratings_rep[1:sum(lengths_genres)]
data <- data.frame(Genre = genres, Rating = ratings_rep)
library(dplyr)
ratings_avg <- data %>%
group_by(Genre) %>%
summarize(Average_Rating = mean(Rating))
ratings_avg <- ratings_avg[order(ratings_avg$Average_Rating, decreasing = TRUE), ]
library(ggplot2)
ggplot(ratings_avg, aes(x = reorder(Genre, Average_Rating), y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black", width = 0.5, position = position_dodge(width = 0.7)) +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5, position = position_dodge(width = 0.7)) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje x para mejor visualización
ggplot(ratings_avg, aes(x = reorder(Genre, Average_Rating), y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black", width = 1, position = position_dodge(width = 1)) +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5, position = position_dodge(width = 0.7)) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje x para mejor visualización
ggplot(ratings_avg, aes(x = reorder(Genre, Average_Rating), y = Average_Rating)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black", width = 2, position = position_dodge(width = 2)) +
geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3.5, position = position_dodge(width = 0.7)) +
labs(x = "Género", y = "Calificación Promedio", title = "Calificación Promedio por Género") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar etiquetas del eje x para mejor visualización
hist(books$numRatings)
hist(books$numRatings, col = "lightblue", main = "Histograma de Número de Valoracions")
